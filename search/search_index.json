{
    "docs": [
        {
            "location": "/", 
            "text": "Introduction\n\n\nZafira is central automation reporting system that is build on the top of Java Spring Framework. It dramatically increases the transparany of test automation results and provides better undestanding of product quality. Qaprosoft team is developing Zafira based on more then 10-years expertise in quality assurance and we strongly believe that your QA/Dev engineers and managers will love it!\n\n\n\n  \n\n\n\n\n\nZafira was initially designed to track automation progress of the tests written using \nCarina automation framework\n but you are capable to integrate Zafira client into you own automation tool. We are activly developing clients for different languages and frameworks but still looking for active community to provide better support. \n\n\nPrimary features\n\n\n\n\nReal-time test results tracking via websockets\n\n\nVNC streaming and video recording of test sessions\n\n\nFlexibly configured widgets and dashboards based on \nD3JS\n\n\nUser management with authorization policies\n\n\nIntegration with TestRail and JIRA\n\n\nIntegration with Hipchat and Slack\n\n\nAbility to compose automation reports and send via email\n\n\n\n\n\n  \n\n    \n\n      \nConfigurable dashboards\n\n      \n\n    \n\n    \n\n      \nIntegrations with multiple services\n\n      \n\n    \n\n  \n\n  \n\n    \n\n      \nReal-time test results\n\n      \n\n    \n\n    \n\n      \nLive streaming and video recording\n\n      \n\n    \n\n  \n\n  \n\n    \n\n      \nComparison of test runs\n\n      \n\n    \n\n    \n\n      \nTest issues tracking", 
            "title": "Overview"
        }, 
        {
            "location": "/#introduction", 
            "text": "Zafira is central automation reporting system that is build on the top of Java Spring Framework. It dramatically increases the transparany of test automation results and provides better undestanding of product quality. Qaprosoft team is developing Zafira based on more then 10-years expertise in quality assurance and we strongly believe that your QA/Dev engineers and managers will love it!  \n     Zafira was initially designed to track automation progress of the tests written using  Carina automation framework  but you are capable to integrate Zafira client into you own automation tool. We are activly developing clients for different languages and frameworks but still looking for active community to provide better support.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#primary-features", 
            "text": "Real-time test results tracking via websockets  VNC streaming and video recording of test sessions  Flexibly configured widgets and dashboards based on  D3JS  User management with authorization policies  Integration with TestRail and JIRA  Integration with Hipchat and Slack  Ability to compose automation reports and send via email   \n   \n     \n       Configurable dashboards \n       \n     \n     \n       Integrations with multiple services \n       \n     \n   \n   \n     \n       Real-time test results \n       \n     \n     \n       Live streaming and video recording \n       \n     \n   \n   \n     \n       Comparison of test runs \n       \n     \n     \n       Test issues tracking", 
            "title": "Primary features"
        }, 
        {
            "location": "/getting_started/", 
            "text": "Getting started\n\n\nPrerequesties\n\n\nThe easiest way to deploy Zafira it to use \nDocker\n. You will find all the details for installation of \nDocker Engine\n and \nDocker Compose\n in oficial documentation. Docker allows to install Zafira on Linux, Mac or Windows. Make sure that you have allocated at least 2 CPUs and 4Gb or RAM for Docker operations. Please verify that following ports are not binded:\n\n\n\n\n8080  (Tomcat)\n\n\n5433  (PostgresDB)\n\n\n15672 (RabbitMQ)\n\n\n15674 (RabbitMQ)\n\n\n5672  (RabbitMQ)\n\n\n5601  (ELK)\n\n\n9200  (ELK)\n\n\n5044  (ELK)\n\n\n\n\n\n  \n\n\n\n\n\nStartup in Docker\n\n\n\n\nClone Zafira repo:\n\n\n\n\n$ git clone git@github.com:qaprosoft/zafira.git\n\n\n\n\n\n\nIf you are planning to access Zafira remotely you will need to modify \ndocker-compose.yml\n specifying appropriate IP address of your host:\n\n\n\n\nenvironment:\n  - ZAFIRA_URL=http://localhost:8080\n\n\n\n\n\n\nStart Zafira:\n\n\n\n\n$ docker-compose up -d\n\n\n\n\n\n\nVerify deployment by running:\n\n\n\n\n$ docker ps\n\nCONTAINER ID        IMAGE                               COMMAND    \nc0e8e371de0f        qaprosoft/zafira:latest             \n/bin/sh -c /entrypo\u2026\n\na207d5718996        sebp/elk:630                        \n/usr/local/bin/star\u2026\n \n5ccaadeeafe7        qaprosoft/rabbitmq:latest           \ndocker-entrypoint.s\u2026\n\n922b75b2849a        selenium/standalone-chrome:latest   \n/opt/bin/entry_poin\u2026\n\ne8a2d32590ed        qaprosoft/postgres:9.6              \ndocker-entrypoint.s\u2026\n\n\n\n\n\n\n\nOpen Zafira in your browser:\n\n\n\n\nhttp://localhost:8080/zafira\n\n\n\n\n\n\nUse default credentials to login:\n\n\n\n\nqpsdemo/qpsdemo", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting_started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting_started/#prerequesties", 
            "text": "The easiest way to deploy Zafira it to use  Docker . You will find all the details for installation of  Docker Engine  and  Docker Compose  in oficial documentation. Docker allows to install Zafira on Linux, Mac or Windows. Make sure that you have allocated at least 2 CPUs and 4Gb or RAM for Docker operations. Please verify that following ports are not binded:   8080  (Tomcat)  5433  (PostgresDB)  15672 (RabbitMQ)  15674 (RabbitMQ)  5672  (RabbitMQ)  5601  (ELK)  9200  (ELK)  5044  (ELK)", 
            "title": "Prerequesties"
        }, 
        {
            "location": "/getting_started/#startup-in-docker", 
            "text": "Clone Zafira repo:   $ git clone git@github.com:qaprosoft/zafira.git   If you are planning to access Zafira remotely you will need to modify  docker-compose.yml  specifying appropriate IP address of your host:   environment:\n  - ZAFIRA_URL=http://localhost:8080   Start Zafira:   $ docker-compose up -d   Verify deployment by running:   $ docker ps\n\nCONTAINER ID        IMAGE                               COMMAND    \nc0e8e371de0f        qaprosoft/zafira:latest              /bin/sh -c /entrypo\u2026 \na207d5718996        sebp/elk:630                         /usr/local/bin/star\u2026  \n5ccaadeeafe7        qaprosoft/rabbitmq:latest            docker-entrypoint.s\u2026 \n922b75b2849a        selenium/standalone-chrome:latest    /opt/bin/entry_poin\u2026 \ne8a2d32590ed        qaprosoft/postgres:9.6               docker-entrypoint.s\u2026    Open Zafira in your browser:   http://localhost:8080/zafira   Use default credentials to login:   qpsdemo/qpsdemo", 
            "title": "Startup in Docker"
        }, 
        {
            "location": "/releases/", 
            "text": "Release notes", 
            "title": "Release notes"
        }, 
        {
            "location": "/releases/#release-notes", 
            "text": "", 
            "title": "Release notes"
        }, 
        {
            "location": "/about/", 
            "text": "About", 
            "title": "About"
        }, 
        {
            "location": "/about/#about", 
            "text": "", 
            "title": "About"
        }
    ]
}